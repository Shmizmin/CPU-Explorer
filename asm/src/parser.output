Terminals unused in grammar

    NEWLINE


Grammar

    0 $accept: program END

    1 program: statements

    2 arguments_helper: arguments_helper COMMA number
    3                 | number

    4 arguments: arguments_helper
    5          | %empty

    6 assignment: IDENTIFIER EQUAL expression

    7 directive: MACRO IDENTIFIER LPAREN arguments RPAREN LBRACE statements RBRACE
    8          | ALIAS assignment
    9          | VAR assignment
   10          | ORIGIN number

   11 number: INT
   12       | IDENTIFIER

   13 paren_expr: LPAREN expression RPAREN

   14 expression: imm
   15           | mem
   16           | number
   17           | paren_expr
   18           | expression PLUS expression
   19           | expression MINUS expression
   20           | expression TIMES expression
   21           | expression DIVIDE expression
   22           | expression LSHIFT expression
   23           | expression RSHIFT expression

   24 label: IDENTIFIER COLON

   25 operand: REGISTER
   26        | imm
   27        | mem

   28 instruction: IDENTIFIER
   29            | IDENTIFIER operand
   30            | IDENTIFIER operand COMMA operand

   31 statement: instruction
   32          | directive
   33          | label

   34 statements: statements statement
   35           | %empty

   36 imm: HASH INT
   37    | HASH paren_expr

   38 mem: PERCENT INT
   39    | PERCENT paren_expr


Terminals, with rules where they appear

    END (0) 0
    error (256)
    NEWLINE (258)
    INT <unsigned long long> (259) 11 36 38
    REGISTER <unsigned long long> (260) 25
    IDENTIFIER <std::string> (261) 6 7 12 24 28 29 30
    PLUS (262) 18
    MINUS (263) 19
    TIMES (264) 20
    DIVIDE (265) 21
    LSHIFT (266) 22
    RSHIFT (267) 23
    COMMA (268) 2 30
    COLON (269) 24
    LPAREN (270) 7 13
    RPAREN (271) 7 13
    LBRACE (272) 7
    RBRACE (273) 7
    HASH (274) 36 37
    PERCENT (275) 38 39
    EQUAL (276) 6
    ALIAS (277) 8
    ORIGIN (278) 10
    MACRO (279) 7
    VAR (280) 9


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    program (27)
        on left: 1
        on right: 0
    arguments_helper (28)
        on left: 2 3
        on right: 2 4
    arguments (29)
        on left: 4 5
        on right: 7
    assignment (30)
        on left: 6
        on right: 8 9
    directive (31)
        on left: 7 8 9 10
        on right: 32
    number (32)
        on left: 11 12
        on right: 2 3 10 16
    paren_expr (33)
        on left: 13
        on right: 17 37 39
    expression (34)
        on left: 14 15 16 17 18 19 20 21 22 23
        on right: 6 13 18 19 20 21 22 23
    label (35)
        on left: 24
        on right: 33
    operand (36)
        on left: 25 26 27
        on right: 29 30
    instruction (37)
        on left: 28 29 30
        on right: 31
    statement (38)
        on left: 31 32 33
        on right: 34
    statements (39)
        on left: 34 35
        on right: 1 7 34
    imm (40)
        on left: 36 37
        on right: 14 26
    mem (41)
        on left: 38 39
        on right: 15 27


State 0

    0 $accept: . program END

    $default  reduce using rule 35 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . END

    END  shift, and go to state 3


State 2

    1 program: statements .
   34 statements: statements . statement

    IDENTIFIER  shift, and go to state 4
    ALIAS       shift, and go to state 5
    ORIGIN      shift, and go to state 6
    MACRO       shift, and go to state 7
    VAR         shift, and go to state 8

    $default  reduce using rule 1 (program)

    directive    go to state 9
    label        go to state 10
    instruction  go to state 11
    statement    go to state 12


State 3

    0 $accept: program END .

    $default  accept


State 4

   24 label: IDENTIFIER . COLON
   28 instruction: IDENTIFIER .
   29            | IDENTIFIER . operand
   30            | IDENTIFIER . operand COMMA operand

    REGISTER  shift, and go to state 13
    COLON     shift, and go to state 14
    HASH      shift, and go to state 15
    PERCENT   shift, and go to state 16

    $default  reduce using rule 28 (instruction)

    operand  go to state 17
    imm      go to state 18
    mem      go to state 19


State 5

    8 directive: ALIAS . assignment

    IDENTIFIER  shift, and go to state 20

    assignment  go to state 21


State 6

   10 directive: ORIGIN . number

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    number  go to state 24


State 7

    7 directive: MACRO . IDENTIFIER LPAREN arguments RPAREN LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 25


State 8

    9 directive: VAR . assignment

    IDENTIFIER  shift, and go to state 20

    assignment  go to state 26


State 9

   32 statement: directive .

    $default  reduce using rule 32 (statement)


State 10

   33 statement: label .

    $default  reduce using rule 33 (statement)


State 11

   31 statement: instruction .

    $default  reduce using rule 31 (statement)


State 12

   34 statements: statements statement .

    $default  reduce using rule 34 (statements)


State 13

   25 operand: REGISTER .

    $default  reduce using rule 25 (operand)


State 14

   24 label: IDENTIFIER COLON .

    $default  reduce using rule 24 (label)


State 15

   36 imm: HASH . INT
   37    | HASH . paren_expr

    INT     shift, and go to state 27
    LPAREN  shift, and go to state 28

    paren_expr  go to state 29


State 16

   38 mem: PERCENT . INT
   39    | PERCENT . paren_expr

    INT     shift, and go to state 30
    LPAREN  shift, and go to state 28

    paren_expr  go to state 31


State 17

   29 instruction: IDENTIFIER operand .
   30            | IDENTIFIER operand . COMMA operand

    COMMA  shift, and go to state 32

    $default  reduce using rule 29 (instruction)


State 18

   26 operand: imm .

    $default  reduce using rule 26 (operand)


State 19

   27 operand: mem .

    $default  reduce using rule 27 (operand)


State 20

    6 assignment: IDENTIFIER . EQUAL expression

    EQUAL  shift, and go to state 33


State 21

    8 directive: ALIAS assignment .

    $default  reduce using rule 8 (directive)


State 22

   11 number: INT .

    $default  reduce using rule 11 (number)


State 23

   12 number: IDENTIFIER .

    $default  reduce using rule 12 (number)


State 24

   10 directive: ORIGIN number .

    $default  reduce using rule 10 (directive)


State 25

    7 directive: MACRO IDENTIFIER . LPAREN arguments RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 34


State 26

    9 directive: VAR assignment .

    $default  reduce using rule 9 (directive)


State 27

   36 imm: HASH INT .

    $default  reduce using rule 36 (imm)


State 28

   13 paren_expr: LPAREN . expression RPAREN

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 37
    imm         go to state 38
    mem         go to state 39


State 29

   37 imm: HASH paren_expr .

    $default  reduce using rule 37 (imm)


State 30

   38 mem: PERCENT INT .

    $default  reduce using rule 38 (mem)


State 31

   39 mem: PERCENT paren_expr .

    $default  reduce using rule 39 (mem)


State 32

   30 instruction: IDENTIFIER operand COMMA . operand

    REGISTER  shift, and go to state 13
    HASH      shift, and go to state 15
    PERCENT   shift, and go to state 16

    operand  go to state 40
    imm      go to state 18
    mem      go to state 19


State 33

    6 assignment: IDENTIFIER EQUAL . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 41
    imm         go to state 38
    mem         go to state 39


State 34

    7 directive: MACRO IDENTIFIER LPAREN . arguments RPAREN LBRACE statements RBRACE

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 5 (arguments)

    arguments_helper  go to state 42
    arguments         go to state 43
    number            go to state 44


State 35

   16 expression: number .

    $default  reduce using rule 16 (expression)


State 36

   17 expression: paren_expr .

    $default  reduce using rule 17 (expression)


State 37

   13 paren_expr: LPAREN expression . RPAREN
   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    LSHIFT  shift, and go to state 49
    RSHIFT  shift, and go to state 50
    RPAREN  shift, and go to state 51


State 38

   14 expression: imm .

    $default  reduce using rule 14 (expression)


State 39

   15 expression: mem .

    $default  reduce using rule 15 (expression)


State 40

   30 instruction: IDENTIFIER operand COMMA operand .

    $default  reduce using rule 30 (instruction)


State 41

    6 assignment: IDENTIFIER EQUAL expression .
   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    LSHIFT  shift, and go to state 49
    RSHIFT  shift, and go to state 50

    $default  reduce using rule 6 (assignment)


State 42

    2 arguments_helper: arguments_helper . COMMA number
    4 arguments: arguments_helper .

    COMMA  shift, and go to state 52

    $default  reduce using rule 4 (arguments)


State 43

    7 directive: MACRO IDENTIFIER LPAREN arguments . RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 53


State 44

    3 arguments_helper: number .

    $default  reduce using rule 3 (arguments_helper)


State 45

   18 expression: expression PLUS . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 54
    imm         go to state 38
    mem         go to state 39


State 46

   19 expression: expression MINUS . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 55
    imm         go to state 38
    mem         go to state 39


State 47

   20 expression: expression TIMES . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 56
    imm         go to state 38
    mem         go to state 39


State 48

   21 expression: expression DIVIDE . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 57
    imm         go to state 38
    mem         go to state 39


State 49

   22 expression: expression LSHIFT . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 58
    imm         go to state 38
    mem         go to state 39


State 50

   23 expression: expression RSHIFT . expression

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    LPAREN      shift, and go to state 28
    HASH        shift, and go to state 15
    PERCENT     shift, and go to state 16

    number      go to state 35
    paren_expr  go to state 36
    expression  go to state 59
    imm         go to state 38
    mem         go to state 39


State 51

   13 paren_expr: LPAREN expression RPAREN .

    $default  reduce using rule 13 (paren_expr)


State 52

    2 arguments_helper: arguments_helper COMMA . number

    INT         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    number  go to state 60


State 53

    7 directive: MACRO IDENTIFIER LPAREN arguments RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 61


State 54

   18 expression: expression . PLUS expression
   18           | expression PLUS expression .
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    LSHIFT  shift, and go to state 49
    RSHIFT  shift, and go to state 50

    $default  reduce using rule 18 (expression)


State 55

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   19           | expression MINUS expression .
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    LSHIFT  shift, and go to state 49
    RSHIFT  shift, and go to state 50

    $default  reduce using rule 19 (expression)


State 56

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   20           | expression TIMES expression .
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression

    $default  reduce using rule 20 (expression)


State 57

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   21           | expression DIVIDE expression .
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression

    $default  reduce using rule 21 (expression)


State 58

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   22           | expression LSHIFT expression .
   23           | expression . RSHIFT expression

    $default  reduce using rule 22 (expression)


State 59

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . TIMES expression
   21           | expression . DIVIDE expression
   22           | expression . LSHIFT expression
   23           | expression . RSHIFT expression
   23           | expression RSHIFT expression .

    $default  reduce using rule 23 (expression)


State 60

    2 arguments_helper: arguments_helper COMMA number .

    $default  reduce using rule 2 (arguments_helper)


State 61

    7 directive: MACRO IDENTIFIER LPAREN arguments RPAREN LBRACE . statements RBRACE

    $default  reduce using rule 35 (statements)

    statements  go to state 62


State 62

    7 directive: MACRO IDENTIFIER LPAREN arguments RPAREN LBRACE statements . RBRACE
   34 statements: statements . statement

    IDENTIFIER  shift, and go to state 4
    RBRACE      shift, and go to state 63
    ALIAS       shift, and go to state 5
    ORIGIN      shift, and go to state 6
    MACRO       shift, and go to state 7
    VAR         shift, and go to state 8

    directive    go to state 9
    label        go to state 10
    instruction  go to state 11
    statement    go to state 12


State 63

    7 directive: MACRO IDENTIFIER LPAREN arguments RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 7 (directive)

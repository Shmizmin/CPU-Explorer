#ifndef emu_instructions_hpp
#define emu_instructions_hpp

#include <cstdint>

#include "literals.hpp"

enum Opcode : std::uint8_t
{
	MOV_R0_R1  = 0x00_u8, ADD_R0_R1  = 0x01_u8, SUB_R0_R1  = 0x02_u8, XOR_R0_R1  = 0x03_u8, OR_R0_R1  = 0x04_u8, AND_R0_R1  = 0x05_u8, CMP_R0_R1  = 0x06_u8, nop1       = 0x07_u8, PUSH_R0   = 0x08_u8, POP_R0      = 0x09_u8, ADD_SP_R0  = 0x0A_u8, SUB_SP_R0  = 0x0B_u8, ROR_R0_R1  = 0x0C_u8, ROL_R0_R1  = 0x0D_u8, SHR_R0_R1  = 0x0E_u8, SHL_R0_R1  = 0x0F_u8,
	MOV_R0_R2  = 0x10_u8, ADD_R0_R2  = 0x11_u8, SUB_R0_R2  = 0x12_u8, XOR_R0_R2  = 0x13_u8, OR_R0_R2  = 0x14_u8, AND_R0_R2  = 0x15_u8, CMP_R0_R2  = 0x16_u8, nop2       = 0x17_u8, PUSH_R1   = 0x18_u8, POP_R1      = 0x19_u8, ADD_SP_R1  = 0x1A_u8, SUB_SP_R1  = 0x1B_u8, ROR_R0_R2  = 0x1C_u8, ROL_R0_R2  = 0x1D_u8, SHR_R0_R2  = 0x1E_u8, SHL_R0_R2  = 0x1F_u8,
	MOV_R1_R0  = 0x20_u8, ADD_R1_R0  = 0x21_u8, SUB_R1_R0  = 0x22_u8, XOR_R1_R0  = 0x23_u8, OR_R1_R0  = 0x24_u8, AND_R1_R0  = 0x25_u8, CMP_R1_R0  = 0x26_u8, nop3       = 0x27_u8, PUSH_R2   = 0x28_u8, POP_R2      = 0x29_u8, ADD_SP_R2  = 0x2A_u8, SUB_SP_R2  = 0x2B_u8, ROR_R1_R0  = 0x2C_u8, ROL_R1_R0  = 0x2D_u8, SHR_R1_R0  = 0x2E_u8, SHL_R1_R0  = 0x2F_u8,
	MOV_R1_R2  = 0x30_u8, ADD_R1_R2  = 0x31_u8, SUB_R1_R2  = 0x32_u8, XOR_R1_R2  = 0x33_u8, OR_R1_R2  = 0x34_u8, AND_R1_R2  = 0x35_u8, CMP_R1_R2  = 0x36_u8, JMP_LABEL  = 0x37_u8, PUSH_IMM  = 0x38_u8, POP_DISCARD = 0x39_u8, ADD_SP_IMM = 0x3A_u8, SUB_SP_IMM = 0x3B_u8, ROR_R1_R2  = 0x3C_u8, ROL_R1_R2  = 0x3D_u8, SHR_R1_R2  = 0x3E_u8, SHL_R1_R2  = 0x3F_u8,
	MOV_R2_R0  = 0x40_u8, ADD_R2_R0  = 0x41_u8, SUB_R2_R0  = 0x42_u8, XOR_R2_R0  = 0x43_u8, OR_R2_R0  = 0x44_u8, AND_R2_R0  = 0x45_u8, CMP_R2_R0  = 0x46_u8, CALL_LABEL = 0x47_u8, PUSH_MEM  = 0x48_u8, POP_MEM     = 0x49_u8, ADD_SP_MEM = 0x4A_u8, SUB_SP_MEM = 0x4B_u8, ROR_R2_R0  = 0x4C_u8, ROL_R2_R0  = 0x4D_u8, SHR_R2_R0  = 0x4E_u8, SHL_R2_R0  = 0x4F_u8,
	MOV_R2_R1  = 0x50_u8, ADD_R2_R1  = 0x51_u8, SUB_R2_R1  = 0x52_u8, XOR_R2_R1  = 0x53_u8, OR_R2_R1  = 0x54_u8, AND_R2_R1  = 0x55_u8, CMP_R2_R1  = 0x56_u8, RET        = 0x57_u8, NOT_R0    = 0x58_u8, NOT_R1      = 0x59_u8, NOT_R2     = 0x5A_u8, NOT_MEM    = 0x5B_u8, ROR_R2_R1  = 0x5C_u8, ROL_R2_R1  = 0x5D_u8, SHR_R2_R1  = 0x5E_u8, SHL_R2_R1  = 0x5F_u8,
	MOV_R0_IMM = 0x60_u8, ADD_R0_IMM = 0x61_u8, SUB_R0_IMM = 0x62_u8, XOR_R0_IMM = 0x63_u8, OR_R0_IMM = 0x64_u8, AND_R0_IMM = 0x65_u8, CMP_R0_IMM = 0x66_u8, JL_LABEL   = 0x67_u8, JG_LABEL  = 0x68_u8, JE_LABEL    = 0x69_u8, JO_LABEL   = 0x6A_u8, JNO_LABEL  = 0x6B_u8, ROR_R0_IMM = 0x6C_u8, ROL_R0_IMM = 0x6D_u8, SHR_R0_IMM = 0x6E_u8, SHL_R0_IMM = 0x6F_u8,
	MOV_R1_IMM = 0x70_u8, ADD_R1_IMM = 0x71_u8, SUB_R1_IMM = 0x72_u8, XOR_R1_IMM = 0x73_u8, OR_R1_IMM = 0x74_u8, AND_R1_IMM = 0x75_u8, CMP_R1_IMM = 0x76_u8, JLE_LABEL  = 0x77_u8, JGE_LABEL = 0x78_u8, JNE_LABEL   = 0x79_u8, JC_LABEL   = 0x7A_u8, JNC_LABEL  = 0x7B_u8, ROR_R1_IMM = 0x7C_u8, ROL_R1_IMM = 0x7D_u8, SHR_R1_IMM = 0x7E_u8, SHL_R1_IMM = 0x7F_u8,
	MOV_R2_IMM = 0x80_u8, ADD_R2_IMM = 0x81_u8, SUB_R2_IMM = 0x82_u8, XOR_R2_IMM = 0x83_u8, OR_R2_IMM = 0x84_u8, AND_R2_IMM = 0x85_u8, CMP_R2_IMM = 0x86_u8, nop34      = 0x87_u8, nop10     = 0x88_u8, nop16       = 0x89_u8, nop22      = 0x8A_u8, nop28      = 0x8B_u8, ROR_R2_IMM = 0x8C_u8, ROL_R2_IMM = 0x8D_u8, SHR_R2_IMM = 0x8E_u8, SHL_R2_IMM = 0x8F_u8,
	MOV_R0_MEM = 0x90_u8, ADD_R0_MEM = 0x91_u8, SUB_R0_MEM = 0x92_u8, XOR_R0_MEM = 0x93_u8, OR_R0_MEM = 0x94_u8, AND_R0_MEM = 0x95_u8, CMP_R0_MEM = 0x96_u8, nop4       = 0x97_u8, nop11     = 0x98_u8, nop17       = 0x99_u8, nop23      = 0x9A_u8, nop29      = 0x9B_u8, ROR_R0_MEM = 0x9C_u8, ROL_R0_MEM = 0x9D_u8, SHR_R0_MEM = 0x9E_u8, SHL_R0_MEM = 0x9F_u8,
	MOV_R1_MEM = 0xA0_u8, ADD_R1_MEM = 0xA1_u8, SUB_R1_MEM = 0xA2_u8, XOR_R1_MEM = 0xA3_u8, OR_R1_MEM = 0xA4_u8, AND_R1_MEM = 0xA5_u8, CMP_R1_MEM = 0xA6_u8, nop5       = 0xA7_u8, nop12     = 0xA8_u8, nop18       = 0xA9_u8, nop24      = 0xAA_u8, nop30      = 0xAB_u8, ROR_R1_MEM = 0xAC_u8, ROL_R1_MEM = 0xAD_u8, SHR_R1_MEM = 0xAE_u8, SHL_R1_MEM = 0xAF_u8,
	MOV_R2_MEM = 0xB0_u8, ADD_R2_MEM = 0xB1_u8, SUB_R2_MEM = 0xB2_u8, XOR_R2_MEM = 0xB3_u8, OR_R2_MEM = 0xB4_u8, AND_R2_MEM = 0xB5_u8, CMP_R2_MEM = 0xB6_u8, nop6       = 0xB7_u8, nop13     = 0xB8_u8, nop19       = 0xB9_u8, nop25      = 0xBA_u8, nop31      = 0xBB_u8, ROR_R2_MEM = 0xBC_u8, ROL_R2_MEM = 0xBD_u8, SHR_R2_MEM = 0xBE_u8, SHL_R2_MEM = 0xBF_u8,
	MOV_MEM_R0 = 0xC0_u8, ADD_MEM_R0 = 0xC1_u8, SUB_MEM_R0 = 0xC2_u8, XOR_MEM_R0 = 0xC3_u8, OR_MEM_R0 = 0xC4_u8, AND_MEM_R0 = 0xC5_u8, CMP_MEM_R0 = 0xC6_u8, nop7       = 0xC7_u8, nop14     = 0xC8_u8, nop20       = 0xC9_u8, nop26      = 0xCA_u8, nop32      = 0xCB_u8, ROR_MEM_R0 = 0xCC_u8, ROL_MEM_R0 = 0xCD_u8, SHR_MEM_R0 = 0xCE_u8, SHL_MEM_R0 = 0xCF_u8,
	MOV_MEM_R1 = 0xD0_u8, ADD_MEM_R1 = 0xD1_u8, SUB_MEM_R1 = 0xD2_u8, XOR_MEM_R1 = 0xD3_u8, OR_MEM_R1 = 0xD4_u8, AND_MEM_R1 = 0xD5_u8, CMP_MEM_R1 = 0xD6_u8, nop8       = 0xD7_u8, nop15     = 0xD8_u8, nop21       = 0xD9_u8, nop27      = 0xDA_u8, nop33      = 0xDB_u8, ROR_MEM_R1 = 0xDC_u8, ROL_MEM_R1 = 0xDD_u8, SHR_MEM_R1 = 0xDE_u8, SHL_MEM_R1 = 0xDF_u8,
	MOV_MEM_R2 = 0xE0_u8, ADD_MEM_R2 = 0xE1_u8, SUB_MEM_R2 = 0xE2_u8, XOR_MEM_R2 = 0xE3_u8, OR_MEM_R2 = 0xE4_u8, AND_MEM_R2 = 0xE5_u8, CMP_MEM_R2 = 0xE6_u8, nop9       = 0xE7_u8, INC_R0    = 0xE8_u8, INC_R1      = 0xE9_u8, INC_R2     = 0xEA_u8, INC_MEM    = 0xEB_u8, ROR_MEM_R2 = 0xEC_u8, ROL_MEM_R2 = 0xED_u8, SHR_MEM_R2 = 0xEE_u8, SHL_MEM_R2 = 0xEF_u8,
	XOR_R0_R0  = 0xF0_u8, XOR_R1_R1  = 0xF1_u8, XOR_R2_R2  = 0xF2_u8, SWI        = 0xF3_u8, IRET      = 0xF4_u8, RESET      = 0xF5_u8, PUSH_FLAGS = 0xF6_u8, POP_FLAGS  = 0xF7_u8, DEC_R0    = 0xF8_u8, DEC_R1      = 0xF9_u8, DEC_R2     = 0xFA_u8, DEC_MEM    = 0xFB_u8, PUSHALL    = 0xFC_u8, POPALL     = 0xFD_u8, EI         = 0xFE_u8, DI         = 0xFF_u8,
};

#endif